---
title: Title of the project
author:
  - name: First author
    orcid: 0000-xxxx-xxxx-xxxx
    corresponding: true
    email: prenom.nom@inrae.fr
    roles:
      - Investigation
      - Project administration
      - Software
      - Visualization
    affiliations:
      - INRAE
  - name: Second Author
    orcid: 0000-xxxx-xxxx-xxxx
    corresponding: false
    roles: []
    affiliations:
      - INRAE
keywords:
  - Quarto
  - INRAE
abstract: |
  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo 
plain-language-summary: |
  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo 
key-points:
  - Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo 
  - Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo 
date: last-modified
---

## Introduction

This a Quarto document. To learn more about Quarto see <https://quarto.org>.

Click the **Code** button in the header to see the full source code of this document.

Here we call the R `summary()` function---the function's output is included immediately below:

```{r}
summary(cars)
```

## Plot Output

You can also embed plots, for example:

```{r}
#| label: fig-pressure
#| fig-cap: "Pressure"
#| code-fold: true

library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
                  xvar = 1:20 + rnorm(20,sd=3),
                  yvar = 1:20 + rnorm(20,sd=3))

ggplot(dat, aes(x=xvar, y=yvar)) +
    geom_point(shape=1) + 
    geom_smooth() 
```

Note that the `code-fold: true` parameter was added to the code chunk to hide the code by default (click "Code" above the plot to see the code).

The use of the `label` and `fig-cap` options make this a cross-referenceable figure (see @fig-pressure).

## Interactivity

You can also add interactive plots. For example:

```{r}
#| label: fig-temperatures
#| fig-cap: "New Haven Temperatures"

library(dygraphs)
dygraph(nhtemp) %>% 
  dyRangeSelector(dateWindow = c("1920-01-01", "1960-01-01"))
```

## Tables

Use the `knitr::kable()` function to print tables as HTML:

```{r}
knitr::kable(head(ggplot2::diamonds))
```


## LaTeX Math

You can also include LaTeX math:

$$
P\left(A=2\middle|\frac{A^2}{B}>4\right)
$$